function [methodinfo,structs,enuminfo,ThunkLibName]=rs2mproto
%RS2MPROTO Create structures to define interfaces found in 'rs2m'.

%This function was generated by loadlibrary.m parser version  on Tue May  6 16:49:34 2025
%perl options:'rs2m.i -outfile=rs2mproto.m -thunkfile=rs2m_thunk_pcwin64.c -header=rs2m.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
ThunkLibName=fullfile(MfilePath,'rs2m_thunk_pcwin64');
% uint64_t add ( uint64_t left , uint64_t right ); 
fcns.thunkname{fcnNum}='uint64uint64uint64Thunk';fcns.name{fcnNum}='add'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint64'; fcns.RHS{fcnNum}={'uint64', 'uint64'};fcnNum=fcnNum+1;
% int32_t linspace ( double start , double end , int32_t n , double * out_ptr ); 
fcns.thunkname{fcnNum}='int32doubledoubleint32voidPtrThunk';fcns.name{fcnNum}='linspace'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'double', 'double', 'int32', 'doublePtr'};fcnNum=fcnNum+1;
% void free_linspace_result ( double * ptr ); 
fcns.thunkname{fcnNum}='voidvoidPtrThunk';fcns.name{fcnNum}='free_linspace_result'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr'};fcnNum=fcnNum+1;
% double square ( double x ); 
fcns.thunkname{fcnNum}='doubledoubleThunk';fcns.name{fcnNum}='square'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
methodinfo=fcns;